#include "pch.h"
#include "CppUnitTest.h"

#include "../TexConverter/Functions.h"

using namespace Microsoft::VisualStudio::CppUnitTestFramework;

namespace TestConvertNodeToTex
{
	TEST_CLASS(TestConvertNodeToTex)
	{
	public:

		TEST_METHOD(TestMethod1)
		{
			Node* node1 = new Node(NodeType::Variable, "a");
			Node* node2 = new Node(NodeType::Variable, "b");

			Node* node3 = new Node(NodeType::UnaryMinus, vector<Node*>{ node1 });
			Node* node4 = new Node(NodeType::UnaryPlus, vector<Node*>{ node2 });

			Node* node5 = new Node(NodeType::Plus, vector<Node*>{ node3, node4 });
			Node* node6 = new Node(NodeType::Variable, "c");

			Node* node7 = new Node(NodeType::Minus, vector<Node*>{ node5, node6 });
			Node* node8 = new Node(NodeType::Variable, "d");
			Node* node9 = new Node(NodeType::Variable, "f");
			Node* node10 = new Node(NodeType::Variable, "g");

			Node* node11 = new Node(NodeType::Multiply, vector<Node*>{ node7, node8 });
			Node* node12 = new Node(NodeType::Divide, vector<Node*>{ node9, node10 });

			Node* node13 = new Node(NodeType::Variable, "result");
			Node* node14 = new Node(NodeType::Mod, vector<Node*>{ node11, node12 });

			Node* node = new Node(NodeType::Assign, vector<Node*>{ node13, node14 });

			string expectedTex = "result \gets d(-a + (+b) - c) \mod \frac{f}{g}";
			string tex = convertNodeToTex(node, NULL, true);

			std::wstringstream wss;
			if (tex != expectedTex) {
				wss << stringToWstring("Тест 1 провален: \n");
				wss << stringToWstring("Ожидается '" + expectedTex + "', получено '" + tex + "'\n");
			}

			Assert::IsTrue(tex == expectedTex, wss.str().c_str());
		}
	};
}